[2024-05-18 14:21:55,459][flwr][INFO] - Starting Flower simulation, config: num_rounds=100, no round_timeout
[2024-05-18 14:21:57,243][flwr][INFO] - Flower VCE: Ray initialized with resources: {'object_store_memory': 39918132019.0, 'node:172.17.34.3': 1.0, 'accelerator_type:G': 1.0, 'GPU': 2.0, 'CPU': 24.0, 'memory': 83142308045.0, 'node:__internal_head__': 1.0}
[2024-05-18 14:21:57,244][flwr][INFO] - Optimize your simulation with Flower VCE: https://flower.ai/docs/framework/how-to-run-simulations.html
[2024-05-18 14:21:57,244][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 20, 'num_gpus': 0.5}
[2024-05-18 14:21:57,250][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 1 actors
[2024-05-18 14:21:57,250][flwr][INFO] - [INIT]
[2024-05-18 14:21:57,250][flwr][INFO] - Requesting initial parameters from one random client
[2024-05-18 14:21:58,452][flwr][INFO] - Received initial parameters from one random client
[2024-05-18 14:21:58,453][flwr][INFO] - Evaluating initial global parameters
[2024-05-18 14:21:58,543][flwr][ERROR] - Error(s) in loading state_dict for Net:
	size mismatch for conv1.weight: copying a param with shape torch.Size([6144, 784]) from checkpoint, the shape in current model is torch.Size([32, 1, 5, 5]).
	size mismatch for conv1.bias: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for conv2.weight: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([64, 32, 5, 5]).
	size mismatch for conv2.bias: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for fc1.weight: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([512, 1024]).
	size mismatch for fc1.bias: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for fc2.weight: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([10, 512]).
	size mismatch for fc2.bias: copying a param with shape torch.Size([6144, 6144]) from checkpoint, the shape in current model is torch.Size([10]).
[2024-05-18 14:21:58,543][flwr][ERROR] - Traceback (most recent call last):
  File "/home/rkat6291/miniconda3/envs/flower_tutorial/lib/python3.9/site-packages/flwr/simulation/app.py", line 308, in start_simulation
    hist = run_fl(
  File "/home/rkat6291/miniconda3/envs/flower_tutorial/lib/python3.9/site-packages/flwr/server/server.py", line 483, in run_fl
    hist, elapsed_time = server.fit(
  File "/home/rkat6291/miniconda3/envs/flower_tutorial/lib/python3.9/site-packages/flwr/server/server.py", line 95, in fit
    res = self.strategy.evaluate(0, parameters=self.parameters)
  File "/home/rkat6291/miniconda3/envs/flower_tutorial/lib/python3.9/site-packages/flwr/server/strategy/fedavg.py", line 167, in evaluate
    eval_res = self.evaluate_fn(server_round, parameters_ndarrays, {})
  File "/home/rkat6291/flwr_bnn_fromt/server.py", line 58, in evaluate_fn
    model.load_state_dict(state_dict, strict=True)
  File "/home/rkat6291/miniconda3/envs/flower_tutorial/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1671, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for Net:
	size mismatch for conv1.weight: copying a param with shape torch.Size([6144, 784]) from checkpoint, the shape in current model is torch.Size([32, 1, 5, 5]).
	size mismatch for conv1.bias: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for conv2.weight: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([64, 32, 5, 5]).
	size mismatch for conv2.bias: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for fc1.weight: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([512, 1024]).
	size mismatch for fc1.bias: copying a param with shape torch.Size([6144]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for fc2.weight: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([10, 512]).
	size mismatch for fc2.bias: copying a param with shape torch.Size([6144, 6144]) from checkpoint, the shape in current model is torch.Size([10]).

[2024-05-18 14:21:58,543][flwr][ERROR] - Your simulation crashed :(. This could be because of several reasons. The most common are: 
	 > Sometimes, issues in the simulation code itself can cause crashes. It's always a good idea to double-check your code for any potential bugs or inconsistencies that might be contributing to the problem. For example: 
		 - You might be using a class attribute in your clients that hasn't been defined.
		 - There could be an incorrect method call to a 3rd party library (e.g., PyTorch).
		 - The return types of methods in your clients/strategies might be incorrect.
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 20, 'num_gpus': 0.5} is not enough for your run). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 20, 'num_gpus': 0.5}.
Take a look at the Flower simulation examples for guidance <https://flower.ai/docs/framework/how-to-run-simulations.html>.
